[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "book-tool"
version = "0.1.0"
description = "Professional CLI tool for eBook processing, ASIN lookup, and KFX conversion"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Book Tool Contributors", email = "support@book-tool.com"}
]
keywords = ["calibre", "ebooks", "automation", "cli", "books"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Graphics :: Graphics Conversion",
    "Topic :: System :: Archiving",
    "Topic :: Text Processing :: General",
]
requires-python = ">=3.9"
dependencies = [
    "click>=8.0.0",
    "pyyaml>=6.0",
    "requests>=2.28.0",
    "beautifulsoup4>=4.11.0",
    "selenium>=4.8.0",
    "webdriver-manager>=3.8.0",
    "tqdm>=4.64.0",
    "rich>=13.0.0",
    "pydantic>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "build>=0.10.0",
    "twine>=4.0.0",
    "sphinx>=6.0.0",
    "sphinx-click>=4.4.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0", 
    "pytest-mock>=3.10.0",
]
docs = [
    "sphinx>=6.0.0",
    "sphinx-click>=4.4.0",
    "myst-parser>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/trytofly94/book-tool"
Documentation = "https://github.com/trytofly94/book-tool#readme"
Repository = "https://github.com/trytofly94/book-tool.git"
"Bug Tracker" = "https://github.com/trytofly94/book-tool/issues"

[project.scripts]
book-tool = "calibre_books.cli.main:cli_entry_point"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.ruff]
target-version = "py39"
line-length = 88
select = ["E", "F", "W", "C90", "I", "N", "UP", "B", "A", "S", "T20", "Q", "RET", "SIM", "ARG", "ERA", "PL", "PIE"]
ignore = ["S101"]  # Allow assert statements in tests

[tool.ruff.per-file-ignores]
"tests/**/*" = ["S101", "ARG", "PLR2004"]
"src/calibre_books/legacy/*" = ["ALL"]  # Legacy code exemption

[tool.ruff.isort]
known-first-party = ["calibre_books"]

[tool.ruff.flake8-quotes]
inline-quotes = "double"

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "selenium.*",
    "webdriver_manager.*",
    "bs4.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
python_functions = [
    "test_*",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "tests/*",
    "*/test_*.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]